#include <ESP8266WiFi.h>
#include <ESP8266WebServer.h>
IPAddress local_IP(192, 168, 8, 1);
IPAddress gateway(192, 168, 8, 1);
IPAddress subnet(255, 255, 255, 0);
const char *ssid = "谢谢谢谢";
const char *password = "谢谢谢谢谢谢";
ESP8266WebServer server(80);
const int led = LED_BUILTIN;
String comdata = "";
String hh_str = "";
String tmp_str = "";
int pp = 0;
int power_01 = 0;
int power_02 = 0;

// 五个ＩＯ口设置
int GPIO_05 = 5;
int GPIO_14 = 14;
int GPIO_12 = 12;
int GPIO_13 = 13;
int GPIO_15 = 15;

// 矩阵serial控制读取及发送 【1/2】
void readserial() {
  delay(100);
  while (Serial.available() > 0)
  {
    comdata += char(Serial.read());
    delay(2);
    pp++;
  }
  if (pp > 0)
  {
    hh_str = comdata;
    pp = 0;
  }
  comdata = "";
}
// 矩阵serial控制读取及发送 【2/2】
void writserial(String ss) {
  int i;
  for (i = 0; i < ss.length(); i++) {
    Serial.write(ss.substring(i, i + 1).c_str());
  }
}
//========= 首页 ==========//
const char webmainhtml[] PROGMEM = R"(<!DOCTYPE html><html ><head><meta http-equiv='Content-Type' content='text/html; charset=utf-8'><title>框架主页面</title><style type='text/css'>
*{margin:0;padding:0;list-style:none;}
html{width: 100%;height:100%;overflow:hidden;background:white;}
body{width: 100%;height:100%;overflow:hidden;
background: -moz-radial-gradient(center, ellipse cover, #2b4654 0%, #2a282a 46%, #2a282a 46%);background: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop(0%, #2b4654), color-stop(46%, #2a282a), color-stop(46%, #2a282a));background: -webkit-radial-gradient(center, ellipse cover, #2b4654 0%, #2a282a 46%, #2a282a 46%);background: -o-radial-gradient(center, ellipse cover, #2b4654 0%, #2a282a 46%, #2a282a 46%);background: -ms-radial-gradient(center, ellipse cover, #2b4654 0%, #2a282a 46%, #2a282a 46%);background: radial-gradient(ellipse at center, #2b4654 0%, #2a282a 46%, #2a282a 46%);}
div{line-height:1.6;}
.top{position:absolute;left:10px;top:10px;right:10px;height:50px;}
.side{position:absolute;left:10px;top:70px;bottom:70px;width:200px;overflow:auto;}
.main{position:absolute;left:220px;top:70px;bottom:70px;right:10px;overflow:auto;}
.bottom{position:absolute;left:10px;bottom:10px;right:10px;height:30px;}
html{_padding:70px10px;}
.top{_height:50px;_margin-top:-60px;_margin-bottom:6px;_position:relative;_top:0;_right:0;_bottom:0;_left:0;}
.side{_height:100%;_float:left;_width:200px;_position:relative;_top:0;_right:0;_bottom:0;_left:0;}
.main{_height:100%;_margin-left:207px;_position:relative;_top:0;_right:0;_bottom:0;_left:0;}
.bottom{_height:30px;_margin-top:4px;_position:relative;_top:0;_right:0;_bottom:0;_left:0;}
.titi-code{font-size:20px;line-height:10%;font-weight:10%;text-align:center;color:#fff;position:absolute;width:100%;top:10%;letter-spacing:6pt;}
.ver-code{font-size:14px;line-height:10%;text-align:center;color:#CDC9C9;position:absolute;width:100%;top:10%;}
.buttys{font-family: 宋体; font-size: 8pt; color: #4A2500; font-weight: bold;text-align:center;cursor:default;background: #e0e0e0;background: -moz-linear-gradient(top, #e0e0e0 0%, #cecece 100%);background: -webkit-gradient(linear, left top, left bottom, color-stop(0%, #e0e0e0), color-stop(100%, #cecece));background: -webkit-linear-gradient(top, #e0e0e0 0%, #cecece 100%);background: -o-linear-gradient(top, #e0e0e0 0%, #cecece 100%);background: -ms-linear-gradient(top, #e0e0e0 0%, #cecece 100%);background: linear-gradient(to bottom, #e0e0e0 0%, #cecece 100%);filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#e0e0e0', endColorstr='#cecece',GradientType=0 );display: block;margin:20px auto 0 auto;width:80%;border: none;border-radius: 3px;padding: 2px;text-shadow: 0 1px 0 rgba(255, 255, 255, 0.45);box-shadow: 0 1px 3px 1px rgba(0, 0, 0, 0.17), 0 1px 0 rgba(255, 255, 255, 0.36) inset;}
.buttys:hover {background: #DDD;}
.buttys:active {padding-top:3px; padding-bottom:1px; background: #C9C9C9;}
</style></head><body>
<div class='top'><h1 class='titi-code'>物联网实验台控制系统</h1></div>
<div class='side'>
 <div class='buttys' onclick="document.getElementById('MF_01').src='/menu01/';">设备电源控制</div>
 <div class='buttys' onclick="document.getElementById('MF_01').src='/menu02/';">大屏设置控制</div>
 <div class='buttys'>灯光设置控制</div>
 <div class='buttys'>空调设置控制</div>
 <div class='buttys' onclick="document.getElementById('MF_01').src='/menu05/';">串口调试控制</div>
</div>
<div class='main'><div style='width: 100%;height:100%;'>
<iframe src=''  allowTransparency='true' style='width:98%;height:98%;padding: 0;border-width: 0;' height='100%' name='MF_01' id='MF_01'></iframe>
</div></div><div class='bottom'><h1 class='ver-code'>谢谢谢谢 v1.0</h1></div></body></html>)";

//=== ★★★★★★★  页面html_str 开始 ★★★★★★★ ===//

//===   menu01  设备电源控制  【menu_qpower_set_str】 ===//
const char menu_qpower_set_str[] PROGMEM = R"(<!doctype html><html><head><meta charset='utf-8'><title>设备电源控制</title><style>
body {font-family: arial, verdana, sans-serif;font-size: 8px;text-align: center;}
.anbox {display: inline-block;margin: 5em 5em;position: relative;}
.xxbox {margin: 1em 1em;position: relative;text-shadow: 0px 13px 0px rgba(30, 30, 30, 0.4);color: #fff;}
.anbox_tit {text-shadow: 0px 13px 0px rgba(30, 30, 30, 0.4);color: #fff;}
.switch {display: inline-block;margin: 10em 0em;position: relative;border-radius: 3.5em;-webkit-box-shadow: 0 0 0.5em rgba(255,255,255,0.2);-moz-box-shadow: 0 0 0.5em rgba(255,255,255,0.2);box-shadow: 0 0 0.5em rgba(255,255,255,0.2);}
.switch label {width: 100%;height: 100%;margin: 0;padding: 0;display: block;position: absolute;top: 0;left: 0;z-index: 10;}
.switch input {display: none;}
.switch span {display: block;-webkit-transition: top 0.2s;-moz-transition: top 0.2s;-ms-transition: top 0.2s;-o-transition: top 0.2s;transition: top 0.2s;}
.switch-border1 {border: 0.1em solid #000;border-radius: 3.5em;-webkit-box-shadow: 0 0.2em rgba(255, 255, 255, 0.2);-moz-box-shadow: 0 0.2em rgba(255, 255, 255, 0.2);box-shadow: 0 0.2em rgba(255, 255, 255, 0.2);}
.switch-border2 {width: 6.6em;height: 12.6em;position: relative;border: 0.1em solid #323232;background-image: -webkit-gradient(linear, left top, right top, from(#2D2D2D), color-stop(0.5, #4B4B4B), to(#2D2D2D));background-image: -webkit-linear-gradient(left, #2D2D2D, #4B4B4B, #2D2D2D);background-image: -moz-linear-gradient(left, #2D2D2D, #4B4B4B, #2D2D2D);background-image: -ms-linear-gradient(left, #2D2D2D, #4B4B4B, #2D2D2D);background-image: -o-linear-gradient(left, #2D2D2D, #4B4B4B, #2D2D2D);background-image: linear-gradient(to right, #2D2D2D, #4B4B4B, #2D2D2D);border-radius: 3.4em;}
.switch-border2:before,.switch-border2:after {content: '';display: block;width: 100%;height: 100%;position: absolute;top: 0;left: 0;z-index: 0;opacity: .3;border-radius: 3.4em;}
.switch-border2:before {background: -webkit-gradient(linear, left top, left bottom, from(#000), to(rgba(0,0,0,0)));background: -webkit-linear-gradient(#000, rgba(0,0,0,0));background: -moz-linear-gradient(#000, rgba(0,0,0,0));background: -ms-linear-gradient(#000, rgba(0,0,0,0));background: -o-linear-gradient(#000, rgba(0,0,0,0));background: linear-gradient(#000, rgba(0,0,0,0));}
.switch-border2:after {background: -webkit-gradient(linear, left top, left bottom, from(rgba(0,0,0,0)), to(#000));background: -webkit-linear-gradient(rgba(0,0,0,0), #000);background: -moz-linear-gradient(rgba(0,0,0,0), #000);background: -ms-linear-gradient(rgba(0,0,0,0), #000);background: -o-linear-gradient(rgba(0,0,0,0), #000);background: linear-gradient(rgba(0,0,0,0), #000);}
.switch-top {width: 100%;height: 84%;position: absolute;top: 8%;left: 0;z-index: 1;background-image: -webkit-gradient(linear, left top, right top, from(#2D2D2D), color-stop(0.5, #4B4B4B), to(#2D2D2D));background-image: -webkit-linear-gradient(left, #2D2D2D, #4B4B4B, #2D2D2D);background-image: -moz-linear-gradient(left, #2D2D2D, #4B4B4B, #2D2D2D);background-image: -ms-linear-gradient(left, #2D2D2D, #4B4B4B, #2D2D2D);background-image: -o-linear-gradient(left, #2D2D2D, #4B4B4B, #2D2D2D);background-image: linear-gradient(to right, #2D2D2D, #4B4B4B, #2D2D2D);border-radius: 3.4em;}
.switch-shadow {width: 100%;height: 100%;position: absolute;top: 0;left: 0;z-index: 2;border-radius: 3.4em;-webkit-box-shadow: 0 0 2em black inset;-moz-box-shadow: 0 0 2em black inset;box-shadow: 0 0 2em black inset;}
.switch-handle-left,.switch-handle-right {content: '';display: block;width: 3.6em;height: 0;position: absolute;top: 6.6em;z-index: 2;border-bottom: 4.5em solid #111;border-left: 0.7em solid transparent;border-right: 0.7em solid transparent;border-radius: 0;}
.switch-handle-left {left: 0.8em;}
.switch-handle-right {right: 0.8em;}
.switch-handle {width: 3.6em;height: 4.5em;position: absolute;top: 6.6em;left: 1.5em;z-index: 3;background: #333;background-image: -webkit-gradient(linear, left top, right top, from(#111), color-stop(0.4, #777), color-stop(0.5, #888), color-stop(0.6, #777), to(#111));background-image: -webkit-linear-gradient(left, #111, #777 40%, #888, #777 60%, #111);background-image: -moz-linear-gradient(left, #111, #777 40%, #888, #777 60%, #111);background-image: -ms-linear-gradient(left, #111, #777 40%, #888, #777 60%, #111);background-image: -o-linear-gradient(left, #111, #777 40%, #888, #777 60%, #111);background-image: linear-gradient(to right, #111, #777 40%, #888, #777 60%, #111);border-radius: 0;}
.switch-handle-top {width: 5em;height: 5em;position: absolute;top: 8.5em;left: 0.8em;z-index: 4;background-color: #555;background-image: -webkit-gradient(linear, left top, right top, from(#5F5F5F), to(#878787));background-image: -webkit-linear-gradient(left, #5F5F5F, #878787);background-image: -moz-linear-gradient(left, #5F5F5F, #878787);background-image: -ms-linear-gradient(left, #5F5F5F, #878787);background-image: -o-linear-gradient(left, #5F5F5F, #878787);background-image: linear-gradient(to right, #5F5F5F, #878787);border-top: 0.2em solid #AEB2B3;border-radius: 2.5em;}
.switch-handle-bottom {width: 3.6em;height: 3.6em;position: absolute;top: 4.7em;left: 1.5em;z-index: 3;background: #333;background-image: -webkit-gradient(linear, left top, right top, from(#111), color-stop(0.4, #777), color-stop(0.5, #888), color-stop(0.6, #777), to(#111));background-image: -webkit-linear-gradient(left, #111, #777 40%, #888, #777 60%, #111);background-image: -moz-linear-gradient(left, #111, #777 40%, #888, #777 60%, #111);background-image: -ms-linear-gradient(left, #111, #777 40%, #888, #777 60%, #111);background-image: -o-linear-gradient(left, #111, #777 40%, #888, #777 60%, #111);background-image: linear-gradient(to right, #111, #777 40%, #888, #777 60%, #111);border-top: 0.2em solid #141414;border-radius: 1.8em;}
.switch-handle-base {width: 4.2em;height: 4.2em;position: absolute;top: 3.8em;left: 1.2em;z-index: 2;border-top: 0.2em solid rgba(255,255,255,0.35);border-radius: 2.1em;-webkit-box-shadow: 0 0 0.5em rgba(0,0,0,0.8) inset;-moz-box-shadow: 0 0 0.5em rgba(0,0,0,0.8) inset;box-shadow: 0 0 0.5em rgba(0,0,0,0.8) inset;}
.switch-led {position: absolute;left: 2em;border-radius: 1.4em;}
.switch-led-border {border: 0.2em solid black;border-radius: 1.3em;}
.switch-led-light {border-radius: 1.1em;-webkit-box-shadow: 0 0 0.5em rgba(255,255,255,0.5) inset;-moz-box-shadow: 0 0 0.5em rgba(255,255,255,0.5) inset;box-shadow: 0 0 0.5em rgba(255,255,255,0.5) inset;}
.switch-led-glow {width: 2em;height: 2em;position: relative;border-radius: 1em;}
.switch-led-glow:before {content: '';display: block;width: 0.6em;height: 0.6em;position: absolute;top: 0.3em;left: 0.7em;background: rgba(255,255,255,0.2);border-radius: 0.3em;-webkit-box-shadow: 0 0 1em rgba(255,255,255,0.75);-moz-box-shadow: 0 0 1em rgba(255,255,255,0.75);box-shadow: 0 0 1em rgba(255,255,255,0.75);}
.switch-led-glow:after {content: '';display: block;width: 0;height: 0;position: absolute;top: 0;left: 0;opacity: 0.2;filter: alpha(opacity=20);border: 1em solid #fff;border-color: transparent #fff transparent #fff;border-radius: 1em;-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);-ms-transform: rotate(45deg);-o-transform: rotate(45deg);transform: rotate(45deg);}
.switch-led:after {display: block;width: 100%;position: absolute;left: 0;color: #666;font-family: arial, verdana, sans-serif;font-weight: bold;text-align: center;text-shadow: 0 0.1em rgba(0,0,0,0.7);}
.switch-led-green:after {content: 'ON';top: -1.8em;}
.switch-led-red:after {content: 'OFF';bottom: -1.8em;}
.switch-led-green {top: -5em;border-top: 0.1em solid rgba(0,161,75,0.5);border-bottom: 0.1em solid rgba(255,255,255,0.25);}
.switch-led-green .switch-led-light {background: rgb(0,161,75);border: 0.1em solid rgb(0,104,56);}
.switch-led-red {bottom: -5em;border-top: 0.1em solid rgba(237,28,36,0.2);border-bottom: 0.1em solid rgba(255,255,255,0.25);-webkit-box-shadow: 0 0 3em rgb(237,28,36);-moz-box-shadow: 0 0 3em rgb(237,28,36);box-shadow: 0 0 3em rgb(237,28,36);}
.switch-led-red .switch-led-light {background: rgb(237,28,36);border: 0.1em solid rgb(161,30,45);}
.switch-led-red .switch-led-glow {background: #fff;background: rgba(255, 255, 255, 0.3);filter: alpha(opacity=30);}
.switch input:checked~.switch-handle-left, .switch input:checked~.switch-handle-right {top: 1.5em;border-bottom: 0;border-top: 4.5em solid #111;}
.switch input:checked~.switch-handle {top: 1.5em;}
.switch input:checked~.switch-handle-top  {top: -1em;border-top: 0;border-bottom: 0.2em solid #AEB2B3;}
.switch input:checked~.switch-handle-bottom {top: 4.2em;border-top: 0;border-bottom: 0.2em solid #141414;}
.switch input:checked~.switch-handle-base {top: 4.5em;border-top: 0;border-bottom: 0.2em solid rgba(255,255,255,0.35);}
.switch input:checked~.switch-led-green {-webkit-box-shadow: 0 0 3em rgb(0,161,75);-moz-box-shadow: 0 0 3em rgb(0,161,75);box-shadow: 0 0 3em rgb(0,161,75);}
.switch input:checked~.switch-led-green .switch-led-glow {background: #fff;background: rgba(255, 255, 255, 0.4);filter: alpha(opacity=40);}
.switch input:checked~.switch-led-red {-webkit-box-shadow: none;-moz-box-shadow: none;box-shadow: none;}
.switch input:checked~.switch-led-red .switch-led-glow {background: rgba(255, 255, 255, 0);filter: alpha(opacity=0);}
</style><head><meta http-equiv='Content-Type' content='text/html; charset=utf-8' /><title>CSS3滑杆开关切换按钮</title></head><body>
<div class='anbox'><div class='anbox_tit'>【1】大屏电源控制</div><span class='switch'><span class='switch-border1'><span class='switch-border2'>
<input id='switch1' type='checkbox' onclick='bgpowzt(1);'>
<label for='switch1'></label><span class='switch-top'></span><span class='switch-shadow'></span><span class='switch-handle'></span><span class='switch-handle-left'></span><span class='switch-handle-right'></span><span class='switch-handle-top'></span><span class='switch-handle-bottom'></span><span class='switch-handle-base'></span><span class='switch-led switch-led-green'><span class='switch-led-border'><span class='switch-led-light'><span class='switch-led-glow'></span></span></span></span><span class='switch-led switch-led-red'><span class='switch-led-border'><span class='switch-led-light'><span class='switch-led-glow'></span></span></span></span></span></span></span></div>
<div class='anbox'><div class='anbox_tit'>【2】矩阵及信号电源控制</div><span class='switch'><span class='switch-border1'><span class='switch-border2'>
<input id='switch2' type='checkbox' onclick='bgpowzt(2);'>
<label for='switch2'></label><span class='switch-top'></span><span class='switch-shadow'></span><span class='switch-handle'></span><span class='switch-handle-left'></span><span class='switch-handle-right'></span><span class='switch-handle-top'></span><span class='switch-handle-bottom'></span><span class='switch-handle-base'></span><span class='switch-led switch-led-green'><span class='switch-led-border'><span class='switch-led-light'><span class='switch-led-glow'></span></span></span></span><span class='switch-led switch-led-red'><span class='switch-led-border'><span class='switch-led-light'><span class='switch-led-glow'></span></span></span></span></span></span></span></div>
<div class='xxbox' id='swit_xx'>
状态信息
</div>
</body></html>
<script type='text/javascript'>
var pow1_zt=0;var pow2_zt=0;var powerdata;
function bgpowzt(bid){
if (bid==1){if (pow1_zt>0){pow1_zt=0;}else{pow1_zt=1}}
if (bid==2){if (pow2_zt>0){pow2_zt=0;}else{pow2_zt=1}}
powerdata ='p_1='+pow1_zt+'&p_2='+pow2_zt;
openpow(bid);
}
function createXHR () {var XHR = [function () { return new XMLHttpRequest () },function () { return new ActiveXObject ('Msxml2.XMLHTTP') },function () { return new ActiveXObject ('Msxml3.XMLHTTP') },function () { return new ActiveXObject ('Microsoft.XMLHTTP') }];var xhr = null;for (var i = 0; i < XHR.length; i ++) {try {xhr = XHR[i]();} catch(e) {continue;}break; }return xhr;}
function openpow(pid)  {
var xhr = createXHR ();
xhr.open('POST', 'post/', true);
xhr.setRequestHeader ('Content-type', 'application/x-www-form-urlencoded');
xhr.onload = function () {if (xhr.readyState === 4 && xhr.status === 200) {
var okstr=xhr.responseText;
var t_array=okstr.split(',');
var ar_1=t_array[0].split('|');
var ar_2=t_array[1].split('|');
var t1_v=parseInt(ar_1[1]);
var t2_v=parseInt(ar_2[1]);
if (pid==1){pow1_zt=t1_v;ckpwxx();}
if (pid==2){pow2_zt=t2_v;ckpwxx();}
}};xhr.send(powerdata);
}
function listpow()  {
var xhr = createXHR ();
xhr.open('GET', 'list/', true);
xhr.onload = function () {if (xhr.readyState === 4 && xhr.status === 200) {
var okstr=xhr.responseText;
var t_array=okstr.split(',');
var ar_1=t_array[0].split('|');
var ar_2=t_array[1].split('|');
var t1_v=parseInt(ar_1[1]);pow1_zt=t1_v;ckpwxx();
var t2_v=parseInt(ar_2[1]);pow2_zt=t2_v;ckpwxx();
}};xhr.send(null);
}
function ckpwxx(){
document.getElementById('switch1').checked=false;
document.getElementById('switch2').checked=false;
document.getElementById('swit_xx').innerHTML="状态：<font color='red'>【1】off</font>　　<font color='red'>【2】off</font>";
if (pow1_zt>0){
document.getElementById('switch1').checked=true;
document.getElementById('swit_xx').innerHTML="状态：<font color='green'>【1】on</font>　　<font color='red'>【2】off</font>";
}
if (pow2_zt>0){
document.getElementById('switch2').checked=true;
document.getElementById('swit_xx').innerHTML="状态：<font color='red'>【1】off</font>　　<font color='green'>【2】on</font>";
}
if ((pow1_zt>0) && (pow2_zt>0)){
document.getElementById('switch1').checked=true;
document.getElementById('switch2').checked=true;
document.getElementById('swit_xx').innerHTML="状态：<font color='green'>【1】on</font>　　<font color='green'>【2】on</font>";
}
}
document.getElementById('switch1').checked=false;
document.getElementById('switch2').checked=false;
document.getElementById('swit_xx').innerHTML="状态：<font color='red'>【1】off</font>　　<font color='red'>【2】off</font>";
listpow();
</script>)";

//===   menu02  大屏设置控制  【menu_screen_set_str】 ===//
const char menu_screen_set_str[] PROGMEM = R"(<!DOCTYPE html PUBLIC '-//W3C//DTD XHTML 1.0 Transitional//EN' 'http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd'>
<html xmlns='http://www.w3.org/1999/xhtml'><head><meta http-equiv='Content-Type' content='text/html; charset=utf-8' /><title>大屏设置控制页面</title>
<style type='text/css'>
.button {display: inline-block;zoom: 1; /* zoom and *display = ie7 hack for display:inline-block */*display: inline;vertical-align: baseline;margin: 0 2px;outline: none;cursor: pointer;text-align: center;text-decoration: none;font: 14px/100% Arial, Helvetica, sans-serif;padding: .5em 2em .55em;text-shadow: 0 1px 1px rgba(0,0,0,.3);-webkit-border-radius: .5em; -moz-border-radius: .5em;border-radius: .5em;-webkit-box-shadow: 0 1px 2px rgba(0,0,0,.2);-moz-box-shadow: 0 1px 2px rgba(0,0,0,.2);box-shadow: 0 1px 2px rgba(0,0,0,.2);}
.button:hover{text-decoration:none;}
.button:active{position:relative;top:1px;}
.bigrounded{-webkit-border-radius:2em;-moz-border-radius:2em;border-radius:2em;}
.medium{font-size:12px;padding:.4em 1.5em .42em;}
.small{font-size:11px;padding:.2em 1em .275em;}
.green{color:#e8f0de;border:solid 1px #538312;background:#64991e;background:-webkit-gradient(linear, left top, left bottom, from(#7db72f), to(#4e7d0e));background:-moz-linear-gradient(top,  #7db72f,  #4e7d0e);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#7db72f', endColorstr='#4e7d0e');}
.green:hover{background:#538018;background:-webkit-gradient(linear, left top, left bottom, from(#6b9d28), to(#436b0c));background:-moz-linear-gradient(top,  #6b9d28,  #436b0c);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#6b9d28', endColorstr='#436b0c');}
.green:active{color:#a9c08c;background:-webkit-gradient(linear, left top, left bottom, from(#4e7d0e), to(#7db72f));background:-moz-linear-gradient(top,  #4e7d0e,  #7db72f);filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#4e7d0e', endColorstr='#7db72f');}
.toggle {display: block; text-align: center; margin-top: 20px; user-select: none;}
.headingOuter { background: #f1f1f1; text-align: center; margin-top: 20px; margin-bottom: 0; padding: 10px; border-top: 1px solid #333; border-bottom: 1px solid #333; font-size: 1.0em;}
</style>
</head><body>
<h2 class='headingOuter'>选择屏幕场景</h2>
<div class='toggle'>
<form method='POST' name='M2_P' id='M2_P' target='FF_c2' action='post/'>
<input class='button green' type='button' value='场景1' onclick='postto(1);'>　　
<input class='button green' type='button' value='场景2' onclick='postto(2);'><p></p>
<input class='button green' type='button' value='场景3' onclick='postto(3);'>　　
<input class='button green' type='button' value='场景4' onclick='postto(4);'><p></p>
<input class='button green' type='button' value='场景5' onclick='postto(5);'>　　
<input class='button green' type='button' value='场景6' onclick='postto(6);'><p></p>
<input type='hidden' name='T_m2_v' id='T_m2_v' value='0'></form></div>
<p><hr></p>
<input class='button green' type='button' value='更新场景名称' onclick='getcjmc();'>
<script language='javascript'>
function postto(vapv){document.getElementById('T_m2_v').value=vapv;document.getElementById('M2_P').submit();}
function createXHR () {var XHR = [function () { return new XMLHttpRequest () },function () { return new ActiveXObject ('Msxml2.XMLHTTP') },function () { return new ActiveXObject ('Msxml3.XMLHTTP') },function () { return new ActiveXObject ('Microsoft.XMLHTTP') }];var xhr = null;for (var i = 0; i < XHR.length; i ++) {try {xhr = XHR[i]();} catch(e) {continue;}break; }return xhr;}
function getcjmc()  {
var xhr = createXHR ();
xhr.open('GET', 'ok.htm', true);
xhr.onload = function () {if (xhr.readyState === 4 && xhr.status === 200) {
var okstr=xhr.responseText;
okstr=okstr.substring(okstr.indexOf('\,')+1,okstr.lastIndexOf('@'));
okstr=okstr.replace(/\,/g,'：')
var t_array=okstr.split('@');
console.log(t_array);
for (var i=0;i<t_array.length;i++)
{
 var tmpmc='T_cj_'+String(i+1);
 document.getElementById(tmpmc).value=t_array[i];
}
}};xhr.send(null);
}
</script>
<div class='toggle'>
<iframe src='list/' name='FF_c2' id='FF_c2'  allowTransparency='true' style='width:98%;height:98%;padding: 0;border-width: 0;font-family: 宋体; font-size: 12pt; color: #FFCC00; line-height: 150%;' height='100%'></iframe>
</div>
</body></html>)";
//===   menu03  灯光设置控制  【menu_xxx_str】 ===//
//===   menu04  空调设置控制  【menu_xxx_str】 ===//
//===   menu05  串口调试控制  【menu_Serial_str】 ===//
const char menu_Serial_str[] PROGMEM = R"(<!DOCTYPE html><html ><head><meta http-equiv='Content-Type' content='text/html; charset=utf-8'><title>串口调试页面</title><style type='text/css'>
*{margin:0;padding:0;list-style:none;}
html{width: 100%;height:100%;overflow:hidden;}
body{width: 100%;height:100%;overflow:hidden;font-family: 宋体; font-size: 12pt; color: #FFCC00; line-height: 150%;}
.form-container{display: block;position: relative; width: 70%;height: 70%;margin: 8px auto;padding: 6px;}
.f_text{width:100%;height:60px;padding:8px;}
.titi-code{font-size:16px;text-align:center;color:#fff;}
.buttys{font-family: 宋体; font-size: 8pt; color: #4A2500; font-weight: bold;text-align:center;cursor:default;background: #e0e0e0;background: -moz-linear-gradient(top, #e0e0e0 0%, #cecece 100%);background: -webkit-gradient(linear, left top, left bottom, color-stop(0%, #e0e0e0), color-stop(100%, #cecece));background: -webkit-linear-gradient(top, #e0e0e0 0%, #cecece 100%);background: -o-linear-gradient(top, #e0e0e0 0%, #cecece 100%);background: -ms-linear-gradient(top, #e0e0e0 0%, #cecece 100%);background: linear-gradient(to bottom, #e0e0e0 0%, #cecece 100%);filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#e0e0e0', endColorstr='#cecece',GradientType=0 );display: block;margin:20px auto 0 auto;width:80%;border: none;border-radius: 3px;padding: 2px;text-shadow: 0 1px 0 rgba(255, 255, 255, 0.45);box-shadow: 0 1px 3px 1px rgba(0, 0, 0, 0.17), 0 1px 0 rgba(255, 255, 255, 0.36) inset;}
.buttys:hover {background: #DDD;}
.buttys:active {padding-top:3px; padding-bottom:1px; background: #C9C9C9;}
</style></head><body>
<script language='javascript'>
function postto(){document.getElementById('M5_P').submit();}
function relist(){document.getElementById('FF_c1').src='list/';}
</script>
<div class='form-container'>
<form method='POST' name='M5_P' id='M5_P' target='FF_c1' action='post/'>
<table border='0' width='100%' cellspacing='4' cellpadding='4'><tr><td nowrap align='center'>
<h1 class='titi-code'>串口调试工具</h1>
</td></tr><tr><td nowrap align='center'>
<textarea name='T_s_01' id='T_s_01' class='f_text'></textarea>
</td></tr><tr><td nowrap align='center'>
<input type='button' value='提交到串口发送' name='B1' onclick='postto()'>&nbsp;
<input type='button' value='刷新串口回传信息' name='B2' onclick='relist()'></td>
</tr><tr><td nowrap align='center' style='border: 1px solid #000000;height:220px;'>
<iframe src='list/' name='FF_c1' id='FF_c1'  allowTransparency='true' style='width:98%;height:98%;padding: 0;border-width: 0;font-family: 宋体; font-size: 12pt; color: #FFCC00; line-height: 150%;' height='100%'></iframe>
</td></tr></table></form></div>
</body></html>)";


//=== ★★★★★★★  页面输出控制 开始 ★★★★★★★ ===//
// 0 首页
void handleRoot() {
  digitalWrite(led, 1);
  server.send(200, "text/html", webmainhtml);
  digitalWrite(led, 0);
}
//404页面
void handleNotFound() {
  digitalWrite(led, 1);
  String message = "File Not Found\n\n";
  message += "URI: ";
  message += server.uri();
  message += "\nMethod: ";
  message += (server.method() == HTTP_GET) ? "GET" : "POST";
  message += "\nArguments: ";
  message += server.args();
  message += "\n";
  for (uint8_t i = 0; i < server.args(); i++) {
    message += " " + server.argName(i) + ": " + server.arg(i) + "\n";
  }
  server.send(404, "text/plain", message);
  digitalWrite(led, 0);
  ESP.wdtFeed();
}
// 1 页面 menu01  设备电源控制  显示页面 【1/3】
void menu_qpower_set() {
  digitalWrite(led, 1);
  server.send(200, "text/html", menu_qpower_set_str);
  digitalWrite(led, 0);
}
// 1 页面 menu01  设备电源控制  数据提交页 【2/3】
void menu_qpower_Form() {
  digitalWrite(led, 1);
  String tmp_str = "";
  if (server.method() != HTTP_POST) {
    server.send(405, "text/html", "没有提交数据！");
  } else {
    for (uint8_t i = 0; i < server.args(); i++) {
      if (server.argName(i) == "p_1") {
        tmp_str = server.arg(i);
        power_01 = tmp_str.toInt();
      }
      if (server.argName(i) == "p_2") {
        tmp_str = server.arg(i);
        power_02 = tmp_str.toInt();
      }
    }
    tmp_str = "1|" + String(power_01) + ",2|" + String(power_02);
    digitalWrite(GPIO_05, power_01);
    digitalWrite(GPIO_14, power_02);
    server.send(200, "text/html", tmp_str);
    Serial.println(tmp_str);
  }
  digitalWrite(led, 0);
}
// 1 页面 menu01  设备电源控制  数据加载页 【3/3】
void menu_qpowerlist() {
  digitalWrite(led, 1);
  String tmp_str;
  tmp_str = "1|" + String(power_01) + ",2|" + String(power_02);
  server.send(200, "text/html", tmp_str);
  digitalWrite(led, 0);
}


// 2 页面 menu02  大屏设置控制  显示页面 【1/3】
void menu_screen_set() {
  digitalWrite(led, 1);
  server.send(200, "text/html", menu_screen_set_str);
  digitalWrite(led, 0);
}
// 2 页面 menu02  大屏设置控制  数据提交页 【2/3】
void menu_screenForm() {
  digitalWrite(led, 1);
  String tmp_staa = "";
  String tmp_stbb = "";
  String message = "提交的数据为:";
  if (server.method() != HTTP_POST) {
    server.send(405, "text/html", "没有提交数据！");
  } else {
    for (uint8_t i = 0; i < server.args(); i++) {
      if (server.argName(i) == "T_m2_v") {
        tmp_staa = server.arg(i);
        writserial("<call,1," + tmp_staa + ">");
        message += "<br>调用的场景编号为: " + tmp_staa;
      }
    }
    readserial();
    hh_str.replace("<", "\&lt\;");
    hh_str.replace(">", "\&gt\;");
    message = message + "<br>" + "串口得到的信息：<br>" + hh_str;
    message = "<p style='font-family: 宋体; font-size: 12pt; color: #FFCC00; line-height: 150%;'>" + message + "</p>";
    server.send(200, "text/html", message);
  }
  digitalWrite(led, 0);
}
// 2 页面 menu02  大屏设置控制  数据加载页 【3/3】
void menu_screenlist() {
  digitalWrite(led, 1);
  String message = "屏幕场景信息：<br>";
  writserial("<rcna,1>");
  readserial();
  hh_str.replace("<", "\&lt\;");
  hh_str.replace(">", "\&gt\;");
  message = "<p style='font-family: 宋体; font-size: 12pt; color: #FFCC00; line-height: 150%;'>" + message + hh_str + "</p>";
  server.send(200, "text/html", message);
  digitalWrite(led, 0);
}


// 3 页面 menu03  灯光设置控制  显示页面 【1/3】
// 3 页面 menu03  灯光设置控制  数据提交页 【2/3】
// 3 页面 menu03  灯光设置控制  数据加载页 【3/3】

// 4 页面 menu04  空调设置控制  显示页面 【1/3】
// 4 页面 menu04  空调设置控制  数据提交页 【2/3】
// 4 页面 menu04  空调设置控制  数据加载页 【3/3】

// 5 页面 menu05  串口调试控制  显示页面 【1/3】
void menu_Serial() {
  digitalWrite(led, 1);
  server.send(200, "text/html", menu_Serial_str);
  digitalWrite(led, 0);
}
// 5 页面 menu05  串口调试控制  数据提交页 【2/3】
void menu_SerialForm() {
  digitalWrite(led, 1);
  String tmp_staa = "";
  String tmp_stbb = "";
  String message = "提交的数据为:";
  if (server.method() != HTTP_POST) {
    digitalWrite(led, 1);
    server.send(405, "text/html", "没有提交数据！");
    digitalWrite(led, 0);
  } else {
    for (uint8_t i = 0; i < server.args(); i++) {
      if (server.argName(i) == "T_s_01") {
        tmp_staa = server.arg(i);
        tmp_stbb = tmp_staa;
        writserial(tmp_staa);
        tmp_stbb.replace("\%3C", "\<");
        tmp_stbb.replace("\%3E", "\>");
        tmp_stbb.replace("\%3c", "\<");
        tmp_stbb.replace("\%3e", "\>");
        tmp_stbb.replace("<", "\&lt\;");
        tmp_stbb.replace(">", "\&gt\;");
        message += "<br>" + server.argName(i) + ": " + tmp_stbb;
      }
    }
    readserial();
    hh_str.replace("<", "\&lt\;");
    hh_str.replace(">", "\&gt\;");
    message = message + "<br>" + "串口得到的信息：<br>" + hh_str;
    message = "<p style='font-family: 宋体; font-size: 12pt; color: #FFCC00; line-height: 150%;'>" + message + "</p>";
    server.send(200, "text/html", message);
  }
  digitalWrite(led, 0);
}
// 5 页面 menu05  串口调试控制  数据加载页 【3/3】
void menu_Seriallist() {
  digitalWrite(led, 1);
  String message = "串口得到的信息：<br>";
  readserial();
  hh_str.replace("<", "\&lt\;");
  hh_str.replace(">", "\&gt\;");
  message = "<p style='font-family: 宋体; font-size: 12pt; color: #FFCC00; line-height: 150%;'>" + message + hh_str + "</p>";
  server.send(200, "text/html", message);
  digitalWrite(led, 0);
}


//=== ★★★★★★★  页面输出控制 结束 ★★★★★★★ ===//

void setup(void) {
  //初始化ＰＩＯ口开始。
  pinMode(GPIO_05, OUTPUT);
  pinMode(GPIO_14, OUTPUT);
  pinMode(GPIO_12, OUTPUT);
  pinMode(GPIO_13, OUTPUT);
  pinMode(GPIO_15, OUTPUT);
  digitalWrite(GPIO_05, 0);
  digitalWrite(GPIO_14, 0);
  digitalWrite(GPIO_12, 0);
  digitalWrite(GPIO_13, 0);
  digitalWrite(GPIO_15, 0);
  //初始化ＰＩＯ口结束。

  pinMode(led, OUTPUT);
  digitalWrite(led, 0);
  Serial.begin(9600);
  Serial.print("Connected to ");
  WiFi.mode(WIFI_AP);
  WiFi.softAPConfig(local_IP, gateway, subnet);
  bool flag;
  flag = WiFi.softAP(ssid, password);
  if (flag) {
    Serial.println("");              // 通过串口监视器输出信息
    Serial.print("当前工作模式:");     // 告知用户设备当前工作模式
    Serial.println(WiFi.getMode());
    Serial.println("网络IP");
    Serial.println(local_IP);     //打印ip地址
    Serial.println("网关IP");
    Serial.println(gateway);        //打印网关IP
    Serial.println("子网掩码：");
    Serial.println(subnet);         //打印子网掩码
  } else {
    //若没有开启成功
    Serial.println("开启失败");
  }

  Serial.println("初始化结束");
  Serial.print(WiFi.softAPIP());
  delay(2000);
  Serial.println("HTTP server begin......");

  //页面服务准备
  server.begin();
  server.on("/", handleRoot);//首页
  server.onNotFound(handleNotFound);//404页

  server.on("/menu01/", menu_qpower_set);//menu01显示页【1/3】
  server.on("/menu01/post/", menu_qpower_Form);//menu01数据提交页【2/3】
  server.on("/menu01/list/", menu_qpowerlist);//menu01数据加载页【3/3】

  server.on("/menu02/", menu_screen_set);//menu02显示页【1/3】
  server.on("/menu02/post/", menu_screenForm);//menu02数据提交页【2/3】
  server.on("/menu02/list/", menu_screenlist);//menu02数据加载页【3/3】


  server.on("/menu05/", menu_Serial);//menu05显示页【1/3】
  server.on("/menu05/post/", menu_SerialForm);//menu05数据提交页【2/3】
  server.on("/menu05/list/", menu_Seriallist);//menu05数据加载页【3/3】


  Serial.println("HTTP server started");
}

void loop(void) {
  ESP.wdtFeed();
  if (Serial.available() > 0) {
    char inChar = Serial.read();
    if (inChar == 'a') {
      int lnaa = WiFi.softAPgetStationNum();
      int aa = WiFi.status();
      Serial.println(String(aa));
      Serial.println(String(lnaa));
      Serial.println(WiFi.softAPIP());
      Serial.println(system_get_sdk_version());
      Serial.println(ESP.getFreeHeap());
      Serial.println(WiFi.localIP());
    }
  }

  server.handleClient();
}
